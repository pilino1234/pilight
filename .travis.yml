language: cpp
dist: trusty
sudo: true

cache: ccache

env:
  matrix:
    - CONFIG=DEFAULT
#    - CONFIG=ALL_ON
#    - CONFIG=ALL_OFF

addons:
  apt:
    packages:
      - libpcap-dev
      - libunwind8-dev
      - lcov

git:
  depth: 1

install:
  - curl https://apt.pilight.org/pilight.key | sudo apt-key add - && echo "deb http://apt.pilight.org/ stable main" | sudo tee -a /etc/apt/sources.list
  - sudo apt-get update -qq && sudo apt-get install libwiringx-dev libwiringx -y
  - mkdir depends && pushd depends
  - wget http://security.ubuntu.com/ubuntu/pool/universe/m/mbedtls/libmbedcrypto0_2.2.1-2ubuntu0.1_amd64.deb
  - wget http://security.ubuntu.com/ubuntu/pool/universe/m/mbedtls/libmbedtls10_2.2.1-2ubuntu0.1_amd64.deb
  - wget http://security.ubuntu.com/ubuntu/pool/universe/m/mbedtls/libmbedx509-0_2.2.1-2ubuntu0.1_amd64.deb
  - wget http://security.ubuntu.com/ubuntu/pool/universe/m/mbedtls/libmbedtls-dev_2.2.1-2ubuntu0.1_amd64.deb
  - sudo dpkg -i *.deb
  - popd

before_script:
  - if [[ $CONFIG == "ALL_OFF" ]]; then sed "s/\(set(.*\) ON/\1 OFF/" -i CMakeConfig.txt; fi
  - if [[ $CONFIG == "ALL_ON" ]]; then sed "s/\(set(.*\) OFF/\1 ON/" -i CMakeConfig.txt; fi

script:
  - mkdir build && pushd build && cmake .. -DCOVERALLS=ON -DCMAKE_BUILD_TYPE=Debug && make && sudo ./pilight-unittest && sudo make install

after_success:
  - gem install coveralls-lcov
  - lcov -c -d CMakeFiles/pilight.dir/libs/pilight/events/ -d CMakeFiles/pilight.dir/libs/pilight/core/ -d CMakeFiles/pilight.dir/libs/pilight/psutil/ -d CMakeFiles/pilight.dir/libs/pilight/protocols/API/ -d CMakeFiles/pilight.dir/libs/pilight/protocols/core/ -d CMakeFiles/pilight.dir/libs/pilight/protocols/generic/ -d CMakeFiles/pilight.dir/libs/pilight/protocols/network/ -d CMakeFiles/pilight.dir/libs/pilight/protocols/GPIO -o coverage.info
  - lcov -r coverage.info '*proc.c' '*adhoc.c' '*gc.c' '*mem.c' '*firmware.c' '*gpio_switch.c' '*relay.c' '*pushover.c' '*pushbullet.c' '*dht11.c' '*dht22.c' -o coverage-filtered.info
  - lcov --list coverage-filtered.info
  - if [[ "$TRAVIS_EVENT_TYPE" != "pull_request" ]]; then coveralls-lcov --repo-token ${COVERALLS_TOKEN} coverage-filtered.info; fi
